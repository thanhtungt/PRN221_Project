@page
@model ProjectAssRazorPage.Pages.UserChat.ChatModel
@{
    ViewData["Title"] = "Chat";
}

@* <h2>Chat Room</h2>

<div id="chatWindow" style="border: 1px solid #ccc; padding: 10px; width: 500px; height: 300px; overflow-y: scroll;">
</div>

<input type="text" id="messageInput" placeholder="Type your message here..." style="width: 400px;" />
<button onclick="sendMessage()">Send</button> *@
<!DOCTYPE html>
<html>
<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
    <script src="~/js/_Chat.js"></script>
</head>
<body>
    <div>
        <input type="text" id="userInput" placeholder="User" />
        <input type="text" id="messageInput" placeholder="Message" />
        <button id="sendButton">Send</button>
    </div>
    <div id="messagesList"></div>
</body>
</html>

@* <script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    // Nhận tin nhắn từ SignalR hub và hiển thị lên giao diện
    connection.on("ReceiveMessage", (user, message) => {
        const msg = document.createElement("div");
        msg.textContent = `${user}: ${message}`;
        document.getElementById("chatWindow").appendChild(msg);
    });

    async function start() {
        try {
            await connection.start();
            console.log("User connected to SignalR Hub.");
        } catch (err) {
            console.error(err);
        }
    }

    // Gửi tin nhắn đến Hub
    async function sendMessage() {
        const message = document.getElementById("messageInput").value;
        await connection.invoke("SendMessage", "User", message);
        document.getElementById("messageInput").value = '';
    }

    start();
</script> *@
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("ReceiveMessage", (user, message) => {
        const msg = document.createElement("div");
        msg.textContent = `${user}: ${message}`;
        document.getElementById("messagesList").appendChild(msg);
    });

    connection.start().catch(err => console.error(err.toString()));

    // Gửi tin nhắn
    document.getElementById("sendButton").addEventListener("click", event => {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
        event.preventDefault();
    });

</script>